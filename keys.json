{
  "_comment": "Info mainly gathered from https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html",
  "glossary": {
    "APFiles": ["Installation files", false],
    "APInstallerURL": ["URL-based path to the files you want to install", true],
    "ATSApplicationFontsPath": ["Path to a single font file or directory of font files in the bundle's Resources directory", false],
    "BuildMachineOSBuild": ["Gets or sets OS build number of the build machine", true],
    "CFAppleHelpAnchor": ["Help file", false],
    "CFBundleAllowMixedLocalizations": ["Localized resources can be mixed (Boolean)", false],
    "CFBundleDevelopmentRegion": ["Localization native development region", true],
    "CFBundleDisplayName": ["The user-visible name of bundle", true],
    "CFBundleDocumentTypes": ["Document types supported by the bundle", false],
    "CFBundleExecutable": ["Name of main bundle executable file", true],
    "CFBundleHelpBookFolder": ["Folder containing the bundle help files. ", false],
    "CFBundleHelpBookName": ["Name of the help file to display", false],
    "CFBundleIconFile": ["Icon file name- possibly outdated", false],
    "CFBundleIconFiles": ["Icon file names", false],
    "CFBundleIconName": ["The name representing the icon for the bundle", false],
    "CFBundleIcons": ["Icon file names", false],
    "CFBundleIdentifier": ["Unique 4-byte signature identifying bundle", true],
    "CFBundleInfoDictionaryVersion": ["Version information for the Info.plist format", false],
    "CFBundleLocalizations": ["Contains localization information for an app that handles its own localized resources", false],
    "CFBundleName": ["Short name of the bundle", true],
    "CFBundlePackageType": ["Bundle OS Type code", true],
    "CFBundleResourceSpecification": ["No longer supported", false],
    "CFBundleShortVersionString": ["Bundle versions string, short", true],
    "CFBundleSignature": ["Unique 4-byte signature", true],
    "CFBundleSpokenName": ["Accessibility bundle name", false],
    "CFBundleSupportedPlatforms": ["Supported platforms", false],
    "CFBundleURLName": ["Abstract name for URL type", false],
    "CFBundleURLSchemes": ["Types of URL schemes include http, ftp, feed, mailto, and so on", true],
    "CFBundleURLTypes": ["URL schemes supported by the bundle", false],
    "CFBundleVersion": ["Bundle version number string", true],
    "CFPlugInDynamicRegistration": ["Register the plug-in dynamically (Boolean)", false],
    "CFPlugInDynamicRegistrationFunction": ["The name of the custom, dynamic registration function", false],
    "CFPlugInFactories": ["UUIDs supported by the plug-in", false],
    "CFPlugInTypes": ["Group(s) of interfaces supported by the plug-in", false],
    "CFPlugInUnloadFunction": ["Custom function to call to unload plug-in", false],
    "CLKComplicationSupportedFamilies": ["Complication families for which the app can provide data", false],
    "CLKComplicationPrincipalClass": ["Name of class that implements complication data source protocol", false],
    "CSResourcesFileMapped": ["True if core Services routines map the bundle's resource files into memory instead of reading them", false],
    "CoreSpotlightContinuation": ["App supports Spotlight query continuation", false],
    "DTXcode": ["Version number of Xcode used to build executable", false],
    "DTXcodeBuild": ["Build number of Xcode used to build executable", false],
    "DTCompiler": ["Compiler used to build executable", true],
    "DTPlatformBuild": ["Defines Platform Build used for compiling app", true],
    "DTPlatformVersion": ["Defines Platform Version used for compiling app", true],
    "DTPlatformName": ["Defines Platform Name used for compiling app", true],
    "DTSDKBuild": ["SDK Build used for executable", false],
    "DTSDKName": ["SDK Name used for executable", false],
    "GCSupportedGameControllers": ["Types of game controllers allowed or required for your app", false],
    "GCSupportsMultipleMicroGamepads": ["Apple TV Remote and the Apple TV Remote app should operate as separate game controllers", false],
    "GKGameCenterBadgingDisabled": ["App is badged", false],
    "GKShowChallengeBanners": ["Banners are shown within an app", false],
    "INAlternativeAppNames": ["Alternative names by which users can refer to the app in Siri", false],
    "IsASCIICapable": ["Custom keyboard supports UIKeyboardTypeASCIICapable keyboard type trait", false],
    "LSApplicationCategoryType": ["Contains a string with the UTI that categorizes the app for the App Store", false],
    "LSApplicationQueriesSchemes": ["URL schemes the app is able to test using the canOpenURL method", false],
    "LSArchitecturePriority": ["Architectures app supports (i386, ppc, x86_64, ppc64)", false],
    "LSBackgroundOnly": ["App is background only (Boolean)", true],
    "LSEnvironment": ["Environment variables and their values", false],
    "LSFileQuarantineEnabled": ["Files app creates that are quarantined by default", false],
    "LSFileQuarantineExcludedPathPatterns": ["Directories for files that should not be automatically quarantined", false],
    "LSGetAppDiedEvents": ["Specifies if app is notified when a child process dies", false],
    "LSMinimumSystemVersion": ["Minimum version of macOS required for the app to run", true],
    "LSMinimumSystemVersionByArchitecture": ["Minimum version of macOS required to run a given platform architecture", false],
    "LSMultipleInstancesProhibited": ["Specifies whether one user or multiple users can launch an app simultaneously", false],
    "LSRequiresIPhoneOS": ["iOS environment required", false],
    "LSRequiresNativeExecution": ["Specifies whether the app must run natively on an Intel-based Mac, as opposed to under Rosetta emulation", false],
    "LSSupportsOpeningDocumentsInPlace": ["Enables your app to directly open original documents, not copies, from other apps", false],
    "LSUIElement": ["Specifies whether the app is an agent app, that is, an app that should not appear in the Dock or Force Quit window", false],
    "LSUIPresentationMode": ["User-interface mode for the app. 0: Normal mode, 1: Content suppressed mode, 2: Content hidden mode, 3: All hidden mode, 4: All suppressed mode", false],
    "LSVisibleInClassic": ["Specifies whether an agent app or background-only app is visible to other apps in the Classic environment", false],
    "MKDirectionsApplicationSupportedModes": ["Types of directions the app can deliver", false],
    "MinimumOSVersion": ["Do not use. Use LSMinimumSystemVersion instead", true],
    "NETestAppMapping": ["Enables testing of per-app VPN app extensions without using an MDM server", false],
    "NSExtension": ["Keys and values that describe app extension", false],
    "NSExtensionActionWantsFullScreenPresentation": ["Action extension should be presented in full screen (Boolean)", false],
    "NSExtensionActivationDictionaryVersion": ["An integer that specifies the activation dictionary version to employ", false],
    "NSExtensionActivationRule": ["Specifies the semantic data types that a Share or Action extension supports", false],
    "NSExtensionActivationUsesStrictMatching": ["Use strict or fuzzy matching when determining the asset types an app extension can handle (Boolean)", false],
    "NSExtensionAttributes": ["Keys and values that specify aspects of an app extension", false],
    "NSExtensionFileProviderDocumentGroup": ["Identifier of a shared container that can be accessed by a document picker and its associated file provider", false],
    "NSExtensionJavaScriptPreprocessingFile": ["Specifies the name of a JavaScript file supplied by a Share extension or an Action extension", false],
    "NSExtensionMainStoryboard": ["Name of the app extension's main storyboard file", false],
    "NSExtensionOverridesHostUIAppearance": ["App extension should ignore appearance updates made by the host app", false],
    "NSExtensionPointIdentifier": ["Extension point that supports an app extension, in reverse-DNS notation", false],
    "NSExtensionPrincipalClass": ["Name of the custom class that implements an app extension's primary view or functionality", false],
    "NSExtensionServiceAllowsToolbarItem": ["Action extension can display a toolbar button in a window's toolbar", false],
    "NSExtensionServiceRoleType": ["The type of task an Action extension can perform", false],
    "NSExtensionServiceToolbarIconFile": ["Icon file for an OS X Action extension's toolbar button", false],
    "NSExtensionServiceToolbarPaletteLabel": ["Toolbar item title that gets displayed in the toolbar customization dialog for an Action extension", false],
    "NFCReaderUsageDescription": ["Reason for app uses the device's NFC reader", false],
    "NSAppleMusicUsageDescription": ["Reason for app to use the media library.", false],
    "NSAppleScriptEnabled": ["AppleScript is enabled", true],
    "NSAppTransportSecurity": ["Changes to default strong security for HTTP connections in iOS, macOS apps and app extensions", false],
    "NSBluetoothPeripheralUsageDescription": ["Reason for app to use Bluetooth", false],
    "NSCalendarsUsageDescription": ["Reason for your app to access the user's calendars", false],
    "NSCameraUsageDescription": ["Reason for app to access the device's camer", false],
    "NSContactsUsageDescription": ["Reason for app to access the user's contacts", false],
    "NSDockTilePlugIn": ["Name of app's Dock tile plug-in", false],
    "NSFaceIDUsageDescription": ["Reason for app to use Face ID", false],
    "NSHealthShareUsageDescription": ["Reason for app to read the user's health data", false],
    "NSHealthUpdateUsageDescription": ["Reason for app to make changes to the user's health data", false],
    "NSHomeKitUsageDescription": ["Reason for app to access the user's HomeKit configuration data", false],
    "NSHumanReadableCopyright": ["Specifies the copyright notice for the bundle", false],
    "NSJavaNeeded": ["Program requires a running Java VM", false],
    "NSJavaPath": ["Paths to classes whose components are preceded by NSJavaRoot", false],
    "NSJavaRoot": ["Root directory containing the java classes", false],
    "NSLocationAlwaysUsageDescription": ["Reason for app to access the user's location information at all times", false],
    "NSLocationUsageDescription": ["Unused", false],
    "NSLocationWhenInUseUsageDescription": ["Reason for app to access the user's location information while app is in use", false],
    "NSMainNibFile": ["Main nib file base name", false],
    "NSMainStoryboardFile": ["Name of the app's storyboard resource file", false],
    "NSMicrophoneUsageDescription": ["Reason for app to access any of the device's microphones", false],
    "NSMotionUsageDescription": ["Reason for app to access the device's accelerometer.", false],
    "NSPersistentStoreTypeKey": ["Type of Core Data persistent store associated with a persistent document type", false],
    "NSPhotoLibraryAddUsageDescription": ["Reason for app to get write-only access to user's photo library", false],
    "NSPhotoLibraryUsageDescription": ["Reason for app to access the user's photo library", false],
    "NSPrefPaneIconFile": ["Name of an image file resource used to represent a preference pane in the System Preferences app", false],
    "NSPrefPaneIconLabel": ["Name of a preference pane displayed beneath the preference pane icon in the System Preferences app", false],
    "NSPrincipalClass": ["Name of the bundle's main class", true],
    "NSRemindersUsageDescription": ["Reason for app to access the user's reminders", false],
    "NSServices": ["Dictionaries specifying the services provided by an app", false],
    "NSSiriUsageDescription": ["Reason for app to send user data to Siri", false],
    "NSSpeechRecognitionUsageDescription": ["Reason for app to send user data to Apple's speech recognition server", false],
    "NSSupportsAutomaticTermination": ["App may be killed to reclaim memory", false],
    "NSSupportsPurgeableLocalStorage": ["App can depend on nonlocal storage for user data", false],
    "NSSupportsSuddenTermination": ["App may be killed to allow for faster shut down or log out operations", false],
    "NSUbiquitousContainer": ["iCloud Drive settings for each container", false],
    "NSUbiquitousContainerIsDocumentScopePublic": ["iCloud Drive should share the contents of this container", false],
    "NSUbiquitousContainerName": ["Name that the iCloud Drive displays for your container", false],
    "NSUbiquitousContainerSupportedFolderLevels": ["Maximum number of folder levels inside container's Documents directory", false],
    "NSUbiquitousDisplaySet": ["Mobile document data that the app can view", false],
    "NSUserActivityTypes": ["User activity types that the app supports", false],
    "NSUserNotificationAlertStyle": ["Notification style should be banner, alert, or none", false],
    "NSVideoSubscriberAccountUsageDescription": ["Reason for app to access the user's TV provider account", false],
    "PHSupportedMediaTypes": ["Types of assets a Photo Editing extension can edit", false],
    "PrefersRightToLeft": ["Custom keyboard is for a right-to-left language.", false],
    "PrimaryLanguage": ["Specifies the BCP 47 - Tags for primary language for custom keyboard", false],
    "RequestsOpenAccess": ["Custom keyboard wants to use a shared container and wants network access", true],
    "SFSafariContentScript": ["Dictionary, providing the filename for a content scripts", false],
    "SFSafariContextMenu": ["Array used to add items to Safari's context menu", false],
    "SFSafariStyleSheet": ["Array used to add style sheets to the extension", false],
    "SFSafariToolbarItem": ["Dictionary used to add a toolbar item to Safari windows", false],
    "SFSafariWebsiteAccess": ["Dictionary that specifies which webpages the Safari app extension can access", false],
    "QLSandboxUnsupported": ["Quick Look plug-in does not support sandboxing", false],
    "QuartzGLEnable": ["App uses Quartz GL", false],
    "UIAppFonts": ["App-specific fonts", false],
    "UIApplicationExitsOnSuspend": ["App terminates instead of run in the background (Boolean)", false],
    "UIApplicationShortcutItems": ["Static Home screen quick actions for the app", false],
    "UIApplicationShortcutWidget": ["Bundle ID of the widget to be available as a Home screen quick action", false],
    "UIAppSupportsHDR": ["App supports HDR mode on Apple TV 4K", false],
    "UIBackgroundModes": ["App needs to continue running in the background", true],
    "UTExportedTypeDeclarations": ["Specifies the UTI-based types supported (and owned) by the app", false],
    "UIDeviceFamily": ["Inserted automatically by Xcode to define the target device of the app", false],
    "UIFileSharingEnabled": ["Supports iTunes file sharing", false],
    "UIDocumentPickerModes": ["Supported document picker modes", false],
    "UIDocumentPickerSupportedFileTypes": ["Supported Uniform Type Identifiers (UTIs) for a document picker", false],
    "UTImportedTypeDeclarations": ["Specifies the UTI-based types supported (but not owned) by the app", false],
    "UIInterfaceOrientation": ["Initial orientation of GUI", false],
    "UIInterfaceOrientationPortrait": ["Device is in portrait mode", false],
    "UIInterfaceOrientationPortraitUpsideDown": ["Device is in portrait mode but upside down", false],
    "UIInterfaceOrientationLandscapeLeft": ["Device is in landscape mode (home button on left side)", false],
    "UIInterfaceOrientationLandscapeRight": ["Device is in landscape mode (home button on right side)", false],
    "UILaunchImageFile": ["Base filename used by app's launch images", false],
    "UILaunchImages": ["Launch images to use for the app", false],
    "UILaunchStoryboardName": ["Storyboard to generate a launch image to use for the app", false],
    "UILaunchStoryboards": ["Info about multiple storyboards to generate launch images", false],
    "UIMainStoryboardFile": ["Name of the app's main storyboard file", false],
    "UINewsstandApp": ["App presents its content in Newsstand", false],
    "UIPrerenderedIcon": ["App icon includes gloss and bevel effects (Boolean)", false],
    "UIRequiredDeviceCapabilities": ["Device-related features required for the app to run", false],
    "UIRequiresFullScreen": ["Requires fulle screen", false],
    "UIRequiresPersistentWiFi": ["Uses the Wi-Fi network (Boolean)", true],
    "UIStatusBarHidden": ["Status bar is initially hidden (Boolean)", false],
    "UIStatusBarStyle": ["Style of the status bar", false],
    "UIStatusBarTintParameters": ["Status bar tint parameters", false],
    "UISupportedExternalAccessoryProtocols": ["Communications protocols supported for communication with attached hardware accessories", false],
    "UISupportedInterfaceOrientations": ["Interface orientations that the app supports", false],
    "UISupportsDocumentBrowser": ["App is a document-based app.", false],
    "UIUserInterfaceStyle": ["Specifies the preferred user interface appearance—light or dark—for a tvOS app", false],
    "UIViewControllerBasedStatusBarAppearance": ["View controller determines the status bar style (Boolean)", false],
    "UIViewEdgeAntialiasing": ["Core Animation layers use antialiasing when drawing does not align to pixel boundaries", false],
    "UIViewGroupOpacity": ["Core Animation layers inherit the opacity of their superlayer", false],
    "UIWhitePointAdaptivityStyle": ["App's white point adaptivity style, for use on devices with True Tone displays", false],
    "WKAppBundleIdentifier": ["Bundle ID of the Watch app", true],
    "WKBackgroundModes": ["Execution time for WatchKit extension running in the background, to update UI values in its app or to perform view navigation for workout processing", false],
    "WKCompanionAppBundleIdentifier": ["Bundle ID of the companion iOS app", false],
    "WKExtensionDelegateClassName": ["Name of class managing lifecycle events for WatchKit extension", false],
    "WKWatchKitApp": ["App is launchable Watch app (Boolean)", false]
    }
}
